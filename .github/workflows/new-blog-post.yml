name: Create new blog post

on:
  issues:
    types:
      - labeled

permissions:
    contents: write
    issues: write

jobs:
  create-post:
    # Restrict to my GitHub username to prevent the public from creating new blog posts
    if: github.actor == 'tdupoiron' && github.event.label.name == 'new-blog-post'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Parse Issue
        id: issue-parser
        uses: issue-ops/parser@v4.1.0
        with:
          body: ${{ github.event.issue.body }}
          issue-form-template: 'new-blog-post.yml'
      
      - name: Set up Hugo Blog post YAML frontmatter
        id: output-issue
        env:
          PARSED_ISSUE_JSON: ${{ steps.issue-parser.outputs.json }}     
        run: |
          echo "$PARSED_ISSUE_JSON" > parsed_issue.json
          echo $(jq '.' parsed_issue.json)

          TITLE=$(jq '.title' parsed_issue.json)
          DATE=$(jq -r '.date' parsed_issue.json)

          # If DATE is not provided, use the current date in Australia/Melbourne timezone
          if [[ -z "$DATE" || "$DATE" == "null" ]]; then
            DATE=$(TZ=Australia/Melbourne date +%Y-%m-%d)
          fi
          
          DESCRIPTION=$(jq '.description' parsed_issue.json)
          LINK=$(jq '.link' parsed_issue.json)
          CONTENT=$(jq '.content' parsed_issue.json)
          BLOG_SECTION=$(jq -r '.blog_section[0]' parsed_issue.json)

          FILENAME=$(echo "$DATE-$TITLE.md" | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-.\n')
           
          echo "TITLE=$TITLE" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
          echo "LINK=$LINK" >> $GITHUB_ENV
          echo "CONTENT=$CONTENT" >> $GITHUB_ENV
          echo "FILENAME=$FILENAME" >> $GITHUB_ENV
          echo "BLOG_SECTION=$BLOG_SECTION" >> $GITHUB_ENV

      - name: Create blog post file
        run: |
          {
            # Extract everything except "content" and convert it to YAML-compatible format
            echo "---"
            jq 'del(.content)' "parsed_issue.json" | yq -P
            echo "---"
            echo ''
            
            # Inline "content" key for the body
            jq -r '.content' "parsed_issue.json" 
          } > content/$BLOG_SECTION/"$FILENAME"

          cat content/$BLOG_SECTION/"$FILENAME" #NOTE: for debugging

      # - name: Switch to preview branch
      #   run: |
      #     git checkout -B preview

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add content/$BLOG_SECTION/"$FILENAME"
          git commit -m "Add new blog post (via Actions): "$FILENAME""
          git push origin main

          gh issue comment ${{ github.event.issue.number }} --body "Added new blog post to \`content/$BLOG_SECTION/$FILENAME\`"

      - name: Close issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }}
